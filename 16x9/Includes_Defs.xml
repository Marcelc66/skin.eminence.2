<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include name="Defs_DialogInfo_PosterLeft"><left>500</left></include>
    <include name="Defs_DialogInfo_SquareLeft"><left>740</left></include>
    <variable name="Defs_SpinnerTexture">
        <value condition="!String.IsEmpty(Skin.String(SkinHelper.SpinnerTexturePath)) + !String.IsEmpty(Skin.String(SkinHelper.SpinnerTexture)) + !String.IsEqual(Skin.String(SkinHelper.SpinnerTexturePath),None)">$INFO[Skin.String(SkinHelper.SpinnerTexturePath)]</value>
        <value>special://skin/extras/busy_spinners/Default</value>
    </variable>
    <include name="Defs_OptionButton_Basic">
        <width>364</width>
        <height>72</height>
        <textcolor>ListLabel</textcolor>
        <alttextcolor>Selected</alttextcolor>
        <selectedcolor>Selected</selectedcolor>
        <focusedcolor>Selected</focusedcolor>
        <font>Font-ListInfo-Small</font>
        <aligny>center</aligny>
        <textoffsetx>bigpad</textoffsetx>
        <radioposx>320</radioposx>
    </include>
    <include name="Defs_OptionButton">
        <include>Defs_OptionButton_Basic</include>
        <texturefocus border="5">common/metal-border-button.png</texturefocus>
        <alttexturefocus border="5">common/metal-border-button.png</alttexturefocus>
    </include>
    <include name="Defs_OptionButton2">
        <include>Defs_OptionButton_Basic</include>
        <texturenofocus colordiffuse="PosterBorder">common/white.png</texturenofocus>
        <texturefocus border="5">common/metal-border-button.png</texturefocus>
        <alttexturenofocus colordiffuse="PosterBorder">common/white.png</alttexturenofocus>
        <alttexturefocus border="5">common/metal-border-button.png</alttexturefocus>
    </include>
    <include name="Defs_OptionButton3">
        <width>auto</width>
        <height>64</height>
        <font>Font-ListInfo-Small-Bold</font>
        <include>Defs_OptionButton_Basic</include>
        <texturenofocus colordiffuse="PosterBorder">common/white.png</texturenofocus>
        <texturefocus border="5">common/metal-border-button.png</texturefocus>
        <alttexturenofocus colordiffuse="PosterBorder">common/white.png</alttexturenofocus>
        <alttexturefocus border="5">common/metal-border-button.png</alttexturefocus>
    </include>
    <include name="Defs_OptionButton_Circle">
        <height>64</height>
        <width>64</width>
        <textcolor>00ffffff</textcolor>
        <alttextcolor>00ffffff</alttextcolor>
        <selectedcolor>00ffffff</selectedcolor>
        <focusedcolor>00ffffff</focusedcolor>
        <include>Defs_OptionButton_Basic</include>
        <texturenofocus colordiffuse="PosterBorder">common/circle.png</texturenofocus>
        <texturefocus colordiffuse="$VAR[HighlightColor]">common/circle.png</texturefocus>
        <alttexturenofocus colordiffuse="PosterBorder">common/circle.png</alttexturenofocus>
        <alttexturefocus colordiffuse="$VAR[HighlightColor]">common/circle.png</alttexturefocus>
    </include>
    <include name="Defs_OSDButton">
        <width>230</width>
        <height>48</height>
        <textcolor>ListLabel</textcolor>
        <selectedcolor>$VAR[HighlightColor]</selectedcolor>
        <focusedcolor>$VAR[HighlightColor]</focusedcolor>
        <font>Font-OSD</font>
        <aligny>center</aligny>
        <align>center</align>
        <textoffsetx>bigpad</textoffsetx>
        <texturenofocus>noop</texturenofocus>
        <texturefocus>noop</texturefocus>
        <alttexturenofocus>noop</alttexturenofocus>
        <alttexturefocus>noop</alttexturefocus>
    </include>
    <include name="Defs_KeyboardButton">
        <width>110</width>
        <height>70</height>
        <textcolor>ListLabel</textcolor>
        <selectedcolor>Selected</selectedcolor>
        <focusedcolor>Selected</focusedcolor>
        <font>Font-ListInfo-Small</font>
        <aligny>center</aligny>
        <textoffsetx>bigpad</textoffsetx>
        <radioposx>295</radioposx>
        <texturenofocus colordiffuse="PosterBorder">common/white.png</texturenofocus>
        <texturefocus border="5">common/metal-border-button.png</texturefocus>
        <alttexturenofocus colordiffuse="PosterBorder">common/white.png</alttexturenofocus>
        <alttexturefocus border="5">common/metal-border-button.png</alttexturefocus>
    </include>
    <variable name="Defs_Hub_Widget">
        <value condition="Window.IsVisible(1101) + !String.IsEmpty(Skin.String(Widget.1101))">$INFO[Skin.String(Widget.1101)]</value>
        <value condition="Window.IsVisible(1102) + !String.IsEmpty(Skin.String(Widget.1102))">$INFO[Skin.String(Widget.1102)]</value>
        <value condition="Window.IsVisible(1103) + !String.IsEmpty(Skin.String(Widget.1103))">$INFO[Skin.String(Widget.1103)]</value>
        <value condition="Window.IsVisible(1104) + !String.IsEmpty(Skin.String(Widget.1104))">$INFO[Skin.String(Widget.1104)]</value>
        <value condition="Window.IsVisible(1105) + !String.IsEmpty(Skin.String(Widget.1105))">$INFO[Skin.String(Widget.1105)]</value>
        <value condition="Window.IsVisible(1106) + !String.IsEmpty(Skin.String(Widget.1106))">$INFO[Skin.String(Widget.1106)]</value>
        <value condition="Window.IsVisible(1107) + !String.IsEmpty(Skin.String(Widget.1107))">$INFO[Skin.String(Widget.1107)]</value>
        <value condition="Window.IsVisible(1108) + !String.IsEmpty(Skin.String(Widget.1108))">$INFO[Skin.String(Widget.1108)]</value>
        <value condition="Window.IsVisible(1109) + !String.IsEmpty(Skin.String(Widget.1109))">$INFO[Skin.String(Widget.1109)]</value>
        <value condition="Window.IsVisible(1102)">special://skin/extras/playlists/RandomEpisodes.xsp</value>
        <value>special://skin/extras/playlists/RandomMovies.xsp</value>
    </variable>
    <variable name="Defs_Hub_Widget_Target">
        <value condition="Window.IsVisible(1101) + !String.IsEmpty(Skin.String(Widget.1101.Type))">$INFO[Skin.String(Widget.1101.Type)]</value>
        <value condition="Window.IsVisible(1102) + !String.IsEmpty(Skin.String(Widget.1102.Type))">$INFO[Skin.String(Widget.1102.Type)]</value>
        <value condition="Window.IsVisible(1103) + !String.IsEmpty(Skin.String(Widget.1103.Type))">$INFO[Skin.String(Widget.1103.Type)]</value>
        <value condition="Window.IsVisible(1104) + !String.IsEmpty(Skin.String(Widget.1104.Type))">$INFO[Skin.String(Widget.1104.Type)]</value>
        <value condition="Window.IsVisible(1105) + !String.IsEmpty(Skin.String(Widget.1105.Type))">$INFO[Skin.String(Widget.1105.Type)]</value>
        <value condition="Window.IsVisible(1106) + !String.IsEmpty(Skin.String(Widget.1106.Type))">$INFO[Skin.String(Widget.1106.Type)]</value>
        <value condition="Window.IsVisible(1107) + !String.IsEmpty(Skin.String(Widget.1107.Type))">$INFO[Skin.String(Widget.1107.Type)]</value>
        <value condition="Window.IsVisible(1108) + !String.IsEmpty(Skin.String(Widget.1108.Type))">$INFO[Skin.String(Widget.1108.Type)]</value>
        <value condition="Window.IsVisible(1109) + !String.IsEmpty(Skin.String(Widget.1109.Type))">$INFO[Skin.String(Widget.1109.Type)]</value>
        <value>videos</value>
    </variable>
    <variable name="Defs_HomeTileColor">
        <value condition="Skin.HasSetting(home.tilecolor) + !String.IsEmpty(Container(9000).ListItem.Property(tilecolor))">$INFO[Container(9000).ListItem.Property(tilecolor)]</value>
        <value condition="Skin.HasSetting(home.tilecolor) + !String.IsEmpty(Container(211).ListItem.Property(tilecolor))">$INFO[Container(211).ListItem.Property(tilecolor)]</value>
        <value>$VAR[HighlightColor]</value>
    </variable>
    <include name="Defs_SideLabel">
        <param name="Label" default="$VAR[Label_SideLabel]" />
        <definition>
            <control type="label">
                <right>-726</right>
                <top>-10</top>
                <height>64</height>
                <width>700</width>
                <align>left</align>
                <angle>270</angle>
                <font>Font-WidgetInfoTitle</font>
                <label>[UPPERCASE]$PARAM[Label][/UPPERCASE]</label>
                <animation effect="fade" start="100" end="33" condition="true">Conditional</animation>
                <visible>Skin.HasSetting(global.eminenceonestyle)</visible>
            </control>
        </definition>
    </include>
    <include name="Defs_SideArrows">
        <control type="image">
            <centerleft>-24</centerleft>
            <width>48</width>
            <height>48</height>
            <texture colordiffuse="ListLabel">common/48-arrow-left.png</texture>
            <centertop>50%</centertop>
            <animation effect="fade" start="100" end="33" condition="true">Conditional</animation>
            <visible>!String.IsEqual(Window(home).Property(HubReturn),Home)</visible>
            <visible>String.StartsWith(Window(home).Property(HubReturn),110)</visible>
            <visible>![Window.IsVisible(1101) | Window.IsVisible(1102) | Window.IsVisible(1103) | Window.IsVisible(1104) | Window.IsVisible(1105) | Window.IsVisible(1106) | Window.IsVisible(1107) | Window.IsVisible(1108) | Window.IsVisible(1109)]</visible>
            <visible>Skin.HasSetting(global.eminenceonestyle)</visible>
        </control>
        <control type="image">
            <centerright>-24</centerright>
            <width>48</width>
            <height>48</height>
            <texture colordiffuse="ListLabel" flipx="true">common/48-arrow-left.png</texture>
            <centertop>50%</centertop>
            <animation effect="fade" start="100" end="33" condition="true">Conditional</animation>
            <visible>!String.IsEqual(Window(home).Property(HubReturn),Home)</visible>
            <visible>!String.StartsWith(Window(home).Property(HubReturn),110)</visible>
            <visible>!String.IsEmpty(Window(home).Property(NodeReturn))</visible>
            <visible>Window.IsVisible(1101) | Window.IsVisible(1102) | Window.IsVisible(1103) | Window.IsVisible(1104) | Window.IsVisible(1105) | Window.IsVisible(1106) | Window.IsVisible(1107) | Window.IsVisible(1108) | Window.IsVisible(1109)</visible>
            <visible>Skin.HasSetting(global.eminenceonestyle)</visible>
        </control>
    </include>
    <include name="Defs_ViewBackground">
        <left>sidepad</left>
        <right>sidepad</right>
        <top>top</top>
        <height>height</height>
        <include>Animation_Common</include>
        <include condition="!Skin.HasSetting(global.widescreen)">Defs_SideLabel</include>
        <include condition="!Skin.HasSetting(global.widescreen)">Defs_SideArrows</include>
    </include>
    <include name="Defs_InfoBackground">
        <left>sidepad</left>
        <right>sidepad</right>
        <top>top</top>
        <height>height</height>
        <include>Animation_Info</include>
        <include content="Defs_SideLabel">
            <param name="Label" value="$LOCALIZE[19033]" />
        </include>
    </include>
    <include name="Defs_Shortcuts_SetHub">
        <control type="button" id="$PARAM[buttonid2]" description="Set HUB WIDGET">
            <width>100%</width>
            <label>31097</label>
            <label2>$INFO[Skin.String(Widget.$PARAM[hubid].Label)]</label2>
            <visible>String.IsEqual(Window.Property(groupname),mainmenu)</visible>
            <visible>String.IsEqual(Container(211).ListItem.Label2,Hub $PARAM[hubid]) | String.IsEqual(Container(211).ListItem.Property(Path),ActivateWindow($PARAM[hubid]))</visible>
            <include>Defs_OptionButton</include>
            <onclick>RunScript(script.skinshortcuts,type=widgets&amp;grouping=widget&amp;skinWidgetPath=Widget.$PARAM[hubid]&amp;skinWidgetName=Widget.$PARAM[hubid].Label&amp;skinWidgetTarget=Widget.$PARAM[hubid].Type)</onclick>
        </control>
        <control type="button" id="$PARAM[buttonid1]" description="Set HUB">
            <width>100%</width>
            <label>31096</label>
            <visible>String.IsEqual(Window.Property(groupname),mainmenu)</visible>
            <include>Defs_OptionButton</include>
            <visible>String.IsEqual(Container(211).ListItem.Label2,Hub $PARAM[hubid]) | String.IsEqual(Container(211).ListItem.Property(Path),ActivateWindow($PARAM[hubid]))</visible>
            <onclick>RunScript(script.skinshortcuts,type=manage&amp;group=x$PARAM[hubid])</onclick>
        </control>
    </include>
    <variable name="Defs_HomeWidget_Content">
        <value condition="Player.HasVideo + Skin.HasSetting(background.showvideo)">noop</value>
        <value condition="String.IsEqual(Container(9000).ListItem.Property(widget),Weather) + System.HasAddon(resource.images.weatherfanart.multi)">$INFO[Window(Weather).Property(Current.FanartCode),resource://resource.images.weatherfanart.multi/,]/</value>
        <value condition="!String.IsEmpty(Container(9000).ListItem.Property(widgetPath)) + !Skin.HasSetting(widgets.persistent)">$INFO[Container(9000).ListItem.Property(widgetPath)]</value>
        <value condition="!String.IsEmpty(Container(9000).ListItem.Property(Background))">noop</value>
        <value condition="[String.IsEqual(Skin.String(home.fallbackwidget),Weather) | String.IsEqual(Skin.String(home.fallbackwidget.node),Weather)] + System.HasAddon(resource.images.weatherfanart.multi)">$INFO[Window(Weather).Property(Current.FanartCode),resource://resource.images.weatherfanart.multi/,]/</value>
        <value condition="!String.IsEmpty(Skin.String(home.fallbackwidget))">$INFO[Skin.String(home.fallbackwidget)]</value>
        <value>special://skin/extras/playlists/RandomMovies.xsp</value>
    </variable>
    <variable name="Defs_HomeWidget_Target">
        <value condition="!String.IsEmpty(Container(9000).ListItem.Property(widgetTarget))">$INFO[Container(9000).ListItem.Property(widgetTarget)]</value>
        <value>videos</value>
    </variable>
</includes>